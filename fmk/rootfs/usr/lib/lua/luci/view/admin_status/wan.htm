<%#
LuCI - Lua Configuration Interface
Copyright 2010 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: iface_overview.htm 7011 2011-05-03 03:20:15Z jow $

-%>
 
<%-
	local ntm = require "luci.model.wanlink".init()
	local uci = require "luci.model.uci".cursor()
	local fs = require "nixio.fs"	

	local net
	local netlist = { }
	for _, net in pairs(ntm.waninfo_get()) do
		if net.ConnName  then
			netlist[#netlist+1] = net.ConnName
		end
	end
	
	table.sort(netlist, function(a, b) return string.sub(a,0,1) < string.sub(b,0,1) end)

	luci.sys.exec([[getEoCInfo.sh]])
	local EocOverview = fs.readfile("/tmp/.EoCInfo")
	local EocMasterMac = EocOverview:match("EocMasterMac=(([A-F0-9:]+)%s*)")
	local EocUpLineAttenuation = EocOverview:match("EocUpLineAttenuation=(%-?[0-9]+%.?[0-9]*)")
	local EocDownLineAttenuation = EocOverview:match("EocDownLineAttenuation=(%-?[0-9]+%.?[0-9]*)")
	local EocUplink = EocOverview:match("EocUplink=([0-9]+%.?[0-9]*)")
	local EocDownlink = EocOverview:match("EocDownlink=([0-9]+%.?[0-9]*)")
	local EocUpSNR = EocOverview:match("EocUpSNR=([0-9]+%.?[0-9]*)")
	local EocDownSNR = EocOverview:match("EocDownSNR=([0-9]+%.?[0-9]*)")
	local EocLinkStatus
	if EocMasterMac then
		EocLinkStatus = translate("link up")
	else
		EocLinkStatus = translate("link down")	
	end;	
	
-%>

<%+header%>

<script type="text/javascript">//<![CDATA[
	var bwxhr = new XHR();

	var G;
	var TIME = 0;
	var RXB  = 1;
	var RXP  = 2;
	var TXB  = 3;
	var TXP  = 4;

	var width  = 760;
	var height = 300;
	var step   = 5;

	var data_wanted = Math.floor(width / step);
	var data_fill   = 0;
	var data_stamp  = 0;

	var data_rx = [ ];
	var data_tx = [ ];

	var line_rx;
	var line_tx;

	var label_25;
	var label_50;
	var label_75;

	var label_rx_cur;
	var label_rx_avg;
	var label_rx_peak;

	var label_tx_cur;
	var label_tx_avg;
	var label_tx_peak;

	var label_scale;


	function bandwidth_label(bytes, br)
	{
		var uby = 'KByte';
		var kby = (bytes / 1024);

		if (kby >= 1024)
		{
			uby = 'MByte';
			kby = kby / 1024;
		}

		var ubi = 'KBit';
		var kbi = (bytes * 8 / 1024);

		if (kbi >= 1024)
		{
			ubi = 'MBit';
			kbi = kbi / 1024;
		}

		return String.format("%f %s/s%s(%f %s/s)",
			kbi.toFixed(2), ubi,
			br ? '<br />' : ' ',
			kby.toFixed(2), uby
		);
	}

	function update_graph()
	{
		bwxhr.get('<%=build_url("admin/status/bandwidth_status", "eth0")%>', null,
			function(x, data)
			{
				var data_max   = 0;
				var data_scale = 0;

				var data_rx_avg = 0;
				var data_tx_avg = 0;

				var data_rx_peak = 0;
				var data_tx_peak = 0;

				for (var i = data_stamp ? 0 : 1; i < data.length; i++)
				{
					/* skip overlapping entries */
					if (data[i][TIME] <= data_stamp)
						continue;

					/* normalize difference against time interval */
					var time_delta = data[i][TIME] - data[i-1][TIME];
					if (time_delta)
					{
						data_rx.push((data[i][RXB] - data[i-1][RXB]) / time_delta);
						data_tx.push((data[i][TXB] - data[i-1][TXB]) / time_delta);
					}
				}

				/* cut off outdated entries */
				data_rx = data_rx.slice(data_rx.length - data_wanted, data_rx.length);
				data_tx = data_tx.slice(data_tx.length - data_wanted, data_tx.length);

				/* find peak */
				for (var i = 0; i < data_rx.length; i++)
				{
					data_max = Math.max(data_max, data_rx[i]);
					data_max = Math.max(data_max, data_tx[i]);

					data_rx_peak = Math.max(data_rx_peak, data_rx[i]);
					data_tx_peak = Math.max(data_tx_peak, data_tx[i]);

					if (i > 0)
					{
						data_rx_avg = (data_rx_avg + data_rx[i]) / 2;
						data_tx_avg = (data_tx_avg + data_tx[i]) / 2;
					}
					else
					{
						data_rx_avg = data_rx[i];
						data_tx_avg = data_tx[i];
					}
				}

				/* remember current timestamp, calculate horizontal scale */
				data_stamp = data[data.length-1][TIME];
				data_scale = height / (data_max * 1.1);


				/* plot data */
				var pt_rx = '0,' + height;
				var pt_tx = '0,' + height;

				var y_rx = 0;
				var y_tx = 0;

				for (var i = 0; i < data_rx.length; i++)
				{
					var x = i * step;

					y_rx = height - Math.floor(data_rx[i] * data_scale);
					y_tx = height - Math.floor(data_tx[i] * data_scale);

					pt_rx += ' ' + x + ',' + y_rx;
					pt_tx += ' ' + x + ',' + y_tx;
				}

				pt_rx += ' ' + width + ',' + y_rx + ' ' + width + ',' + height;
				pt_tx += ' ' + width + ',' + y_tx + ' ' + width + ',' + height;


				line_rx.setAttribute('points', pt_rx);
				line_tx.setAttribute('points', pt_tx);

				label_25.firstChild.data = bandwidth_label(1.1 * 0.25 * data_max);
				label_50.firstChild.data = bandwidth_label(1.1 * 0.50 * data_max);
				label_75.firstChild.data = bandwidth_label(1.1 * 0.75 * data_max);

				label_rx_cur.innerHTML = bandwidth_label(data_rx[data_rx.length-1], true);
				label_tx_cur.innerHTML = bandwidth_label(data_tx[data_tx.length-1], true);

				label_rx_avg.innerHTML = bandwidth_label(data_rx_avg, true);
				label_tx_avg.innerHTML = bandwidth_label(data_tx_avg, true);

				label_rx_peak.innerHTML = bandwidth_label(data_rx_peak, true);
				label_tx_peak.innerHTML = bandwidth_label(data_tx_peak, true);

				/* reset timer */
				window.setTimeout(update_graph, 1000);/*1秒刷1次*/
			}
		)
	}

	/* wait for SVG */
	window.setTimeout(
		function() {
			var svg = document.getElementById('bwsvg');

			try {
				G = svg.getSVGDocument
					? svg.getSVGDocument() : svg.contentDocument;
			}
			catch(e) {
				G = document.embeds['bwsvg'].getSVGDocument();
			}

			if (!G)
			{
				window.setTimeout(arguments.callee, 1000);
			}
			else
			{
				/* find sizes */
				width       = svg.offsetWidth  - 2;
				height      = svg.offsetHeight - 2;
				data_wanted = Math.ceil(width / step);

				/* prefill datasets */
				for (var i = 0; i < data_wanted; i++)
				{
					data_rx[i] = 0;
					data_tx[i] = 0;
				}

				/* find svg elements */
				line_rx = G.getElementById('rx');//polyline rx
				line_tx = G.getElementById('tx');//polyline tx

				label_25 = G.getElementById('label_25');
				label_50 = G.getElementById('label_50');
				label_75 = G.getElementById('label_75');

				label_rx_cur  = document.getElementById('rx_bw_cur');
				label_rx_avg  = document.getElementById('rx_bw_avg');
				label_rx_peak = document.getElementById('rx_bw_peak');

				label_tx_cur  = document.getElementById('tx_bw_cur');
				label_tx_avg  = document.getElementById('tx_bw_avg');
				label_tx_peak = document.getElementById('tx_bw_peak');

				label_scale   = document.getElementById('scale');


				/* plot horizontal time interval lines */
				for (var i = step * 60; i < width; i += step * 60)
				{
					var line = G.createElementNS('http://www.w3.org/2000/svg', 'line');
						line.setAttribute('x1', i);
						line.setAttribute('y1', 0);
						line.setAttribute('x2', i);
						line.setAttribute('y2', '100%');
						line.setAttribute('style', 'stroke:black;stroke-width:0.1');

					var text = G.createElementNS('http://www.w3.org/2000/svg', 'text');
						text.setAttribute('x', i + 5);
						text.setAttribute('y', 15);
						text.setAttribute('style', 'fill:#999999; font-size:9pt');
						text.appendChild(G.createTextNode(Math.round(i / step / 60) + 'min'));

					label_25.parentNode.appendChild(line);
					label_25.parentNode.appendChild(text);
				}

				label_scale.innerHTML = String.format('<%:(%d minute window, %d second interval)%>', data_wanted / 60, 1);

				/* render datasets, start update interval */
				update_graph();
			}
		}, 1000
	);
//]]></script>

<script type="text/javascript">//<![CDATA[
	function iface_shutdown(id, reconnect) {
		if (!reconnect && !confirm(String.format('<%_Really shutdown interface "%s" ?\nYou might loose access to this router if you are connected via this interface.%>', id)))
			return;

		var a = document.getElementById(id + '-ifc-addrs');
		if (a)
			a.innerHTML = reconnect
				? '<em><%:Interface is reconnecting...%></em>'
				: '<em><%:Interface is shutting down...%></em>';

		var s = document.getElementById('ifc-rc-status');
		if (s)
		{
			s.parentNode.style.display = 'block';
			s.innerHTML = '<%:Waiting for router...%>';
		}

		var rcxhr = new XHR();
		rcxhr.get('<%=luci.dispatcher.build_url("admin", "status")%>/iface_' + (reconnect ? 'reconnect' : 'shutdown') + '/' + id, null,
			function(x)
			{
				if (s)
				{
					s.innerHTML = reconnect
						? '<%:Interface reconnected%>'
						: '<%:Interface shut down%>';

					window.setTimeout(function() {
						s.parentNode.style.display = 'none';
					}, 1000);
				}
			}
		);
	}


	var iwxhr = new XHR();
	var wifidevs = <%=luci.http.write_json(netdevs)%>;
	var arptable = <%=luci.http.write_json(arpcache)%>;

	var update_status = function() {
		iwxhr.get('<%=luci.dispatcher.build_url("admin", "status", "iface_wanlink_status", table.concat(netlist, ","))%>', null,
			function(x, ifcs)
			{
				if (ifcs)
				{
					for (var i = 0; i < ifcs.length; i++)
					{
						var ifc = ifcs[i];
						var is_up = (ifc.flags && ifc.flags.up);
						var rxb = ifc.stats ? ifc.stats["rx_bytes"] : 0;
						var txb = ifc.stats ? ifc.stats["tx_bytes"] : 0;
						var rxp = ifc.stats ? ifc.stats["rx_packets"] : 0;
						var txp = ifc.stats ? ifc.stats["tx_packets"] : 0;
						var mac = ifc.macaddr ? ifc.macaddr : '00:00:00:00:00:00';
						var upt = '-';

						var icon;						
						if (ifc.status)
						{
							upt = String.format('%s', ifc.status);
						}						

						var s = document.getElementById(ifc.id + '-ifc-signal');
						if (s)
						{
							s.innerHTML = String.format(
								'<img src="%s" style="width:16px; height:16px" /><br />' +
								'<small>%s</small>',
									icon, ifc.ifname ? ifc.ifname : '?'
							);
						}

						var u = document.getElementById(ifc.id + '-ifc-name');
						if (u)
						{
							u.innerHTML = ifc.connname ? ifc.connname : '';
						}
						var u = document.getElementById(ifc.id + '-ifc-name2');
						if (u)
						{
							u.innerHTML = ifc.connname ? ifc.connname : '';
						}

						var u = document.getElementById(ifc.id + '-ifc-status');
						if (u)
						{
							if (upt =='disconnected')
								u.innerHTML = '<%:link down%>';
							else
								u.innerHTML = '<%:link up%>';
						}

						var m = document.getElementById(ifc.id + '-ifc-mac');
						if (m)
						{
							m.innerHTML = mac.toUpperCase();
						}
						if (ifc.ifname && (ifc.status == "connected"))
						{
							var a = document.getElementById(ifc.id + '-ifc-addrs');
							if (a)
							  {
								 a.innerHTML = ifc.ipaddr
							  }
							var a = document.getElementById(ifc.id + '-ifc-netmask');
							if (a)
							  {
								 a.innerHTML = ifc.netmask 
							  }
							  
							var a = document.getElementById(ifc.id + '-ifc-gateway');
							if (a)
							  {
								 a.innerHTML = ifc.gateway
							  }
							var a = document.getElementById(ifc.id + '-ifc-pridns');
							if (a)
							  {
								 a.innerHTML = ifc.pridns
							  }
							var a = document.getElementById(ifc.id + '-ifc-secdns');
							if (a)
							  {
								 a.innerHTML = ifc.secdns
							  }
						}

						var t = document.getElementById(ifc.id + '-ifc-transfer');
						if (t)
						{
							t.innerHTML = String.format(
								'<strong><%:RX%></strong>: %1024.2mB (%d <%:Pkts.%>)<br />' +
								'<strong><%:TX%></strong>: %1024.2mB (%d <%:Pkts.%>)<br />',
									rxb, rxp, txb, txp
							);
						}
					}
				}

//				window.setTimeout(update_status, 5000);
			}
		)
	};

	update_status();
//]]></script>
	<div class="cbi-content">
    	<div class="cbi-section">
        	<div class="cbi-section-bg">
        	  	<div class="cbi-section-title"><%:WAN Status%>&nbsp;&nbsp;</div>
            </div>
    	</div>
   		<div class="cbi-section">
			<div class="cbi-section-bg">       
				<div class="cbi-table">
					<table width="630" border="1" class="cbi-table-list" cellpadding="1" cellspacing="0" align="center">
                        <tr>
                            <th class="cbi-table-title"><%:Internet Name%></th>
                            <th class="cbi-table-title"><%:Internet Status%></th>
                            <th class="cbi-table-title"><%:IP Address%></th>
                            <th class="cbi-table-title"><%:Netmask%></th>

                        </tr>
                        <% for i, net in ipairs(netlist) do %>
	                        <tr>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-name"></td>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-status"></td>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-addrs"></td>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-netmask"></td>
	                        </tr>   
                        <%end%>                     
					</table>
				</div>
				<div class="cbi-table">
					<tr><td>&nbsp;</td></tr>
					<tr><td>&nbsp;</td></tr>
				</div>

				<div class="cbi-table">
					<table width="630" border="1" class="cbi-table-list" cellpadding="1" cellspacing="0" align="center">
                        <tr>
                            <th class="cbi-table-title"><%:Internet Name%></th>
                            <th class="cbi-table-title"><%:Default Gateway%></th>
                            <th class="cbi-table-title"><%:Primary DNS%></th>
                            <th class="cbi-table-title"><%:Secondary DNS%></th>

                        </tr>
                        <% for i, net in ipairs(netlist) do %>
	                        <tr>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-name2"></td>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-gateway"></td>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-pridns"></td>
	                            <td class="cbi-table-field" id="<%=net%>-ifc-secdns"></td>
	                        </tr>   
                        <%end%>                     
					</table>
				</div>	     
				<div class="cbi-table">
					<tr><td>&nbsp;</td></tr>
					<tr><td>&nbsp;</td></tr>
				</div>
			</div>     	
  		</div>
	   
   		<div class="cbi-section">
        	<div class="cbi-section-bg">
        	  	<div class="cbi-section-title"><%:Eoc Status%>&nbsp;&nbsp;</div>
            </div>
    	</div>
      <div class="cbi-section">
          <div class="cbi-section-bg">    
          	<div class="cbi-table">
              	<table width="630" border="1" class="cbi-table-list" cellpadding="5" cellspacing="0" align="center">
              		<tr>
                  		<td class="cbi-table-title"><%:Eoc Link Status%></td>
                  		<td class="cbi-table-field"><%=EocLinkStatus%></td>
              		</tr>
                  	<tr>
                  		<td class="cbi-table-title"><%:Eoc Line Attenuation(dB)%></td>
                  		<td class="cbi-table-field"><%=EocDownLineAttenuation%></td>
                  	</tr>
                  	<tr>
                    		<td class="cbi-table-title"><%:Eoc Uplink(Mbps)%></td>
                  		<td class="cbi-table-field"><%=EocUplink%></td>
                  	</tr>
                  	<tr>
                  		<td class="cbi-table-title"><%:Eoc Downlink(Mbps)%></td>
				<td class="cbi-table-field"><%=EocDownlink%></td>
                  	</tr>                    
                  	<tr>
                    		<td class="cbi-table-title"><%:Eoc Up SNR(dB)%></td>
                    		<td class="cbi-table-field"><%=EocUpSNR%></td>
                  	</tr>
                  	<tr>
                  		<td class="cbi-table-title"><%:Eoc Down SNR(dB)%></td>
                    		<td class="cbi-table-field"><%=EocDownSNR%></td>
                  	</tr>  
                </table>
          	</div>
          	<div class="cbi-table">
	      	    <tr><td>&nbsp;</td></tr>
	      	    <tr><td>&nbsp;</td></tr>
            </div>
	</div>
      </div>	
    	<div class="cbi-section">
            <div class="cbi-section-bg">
                <div class="cbi-section-title">WAN <%:Realtime Traffic%>&nbsp;&nbsp;</div>
            </div>
        </div>
            
        <div class="cbi-section">
            <div class="cbi-section-bg">
            	<div class="cbi-table">
					<embed id="bwsvg" style="width:100%; height:300px; border:1px solid #000000; background-color:#FFFFFF" src="<%=resource%>/bandwidth.svg" />
					<div style="text-align:right"><small id="scale">-</small></div>
					<br />
					<table style="width:100%; table-layout:fixed" cellspacing="5">
						<tr>
							<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid blue"><%:RX:%></strong></td>
							<td id="rx_bw_cur">0 kbit/s<br />(0 KB/s)</td>

							<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
							<td id="rx_bw_avg">0 kbit/s<br />(0 KB/s)</td>

							<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
							<td id="rx_bw_peak">0 kbit/s<br />(0 KB/s)</td>
						</tr>
						<tr>
							<td style="text-align:right; vertical-align:top"><strong style="border-bottom:2px solid green"><%:TX:%></strong></td>
							<td id="tx_bw_cur">0 kbit/s<br />(0 KB/s)</td>

							<td style="text-align:right; vertical-align:top"><strong><%:Average:%></strong></td>
							<td id="tx_bw_avg">0 kbit/s<br />(0 KB/s)</td>

							<td style="text-align:right; vertical-align:top"><strong><%:Peak:%></strong></td>
							<td id="tx_bw_peak">0 kbit/s<br />(0 KB/s)</td>
						</tr>
					</table>
				</div>

				<div class="cbi-table">
					<tr><td>&nbsp;</td></tr>
					<tr><td>&nbsp;</td></tr>
				</div>
            </div>
        </div>

	</div>
<%+footer%>
